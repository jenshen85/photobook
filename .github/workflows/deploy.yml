# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Photobook CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.16.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Setup SSH key
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/known_hosts
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/phkey
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 700 ~/.ssh && chmod 600 ~/.ssh/*
          eval $(ssh-agent)
          ssh-add ~/.ssh/phkey
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}

      # (optional - only needed if your config uses environment variables)
      - name: Create env file
        run: |
          touch .env
          echo PGPASSWORD=${{ secrets.PGPASSWORD }} >> .env
          echo TARGET_SERVER_HOST=${{ secrets.TARGET_SERVER_HOST }} >> .env
          echo TARGET_SERVER_USER=${{ secrets.TARGET_SERVER_USER }} >> .env

      # Install PM2
      - name: Install PM2
        run: npm i pm2 -g

      - name: Install git
        run: |
          sudo apt-get install -y software-properties-common
          sudo apt-get update
          sudo add-apt-repository -y ppa:git-core/ppa
          sudo apt-get update
          sudo apt-get install -y git

      # Deploy
      - name: PM2 run setup
        run: |
          env $(cat .env | grep -v \"#\" | xargs) pm2 deploy ecosystem.config.js production setup 2>&1 || true

      - name: PM2 run deploy
        run: |
          env $(cat .env | grep -v \"#\" | xargs) pm2 deploy ecosystem.config.js production
