@import 'variables';

@mixin proxima {
  font-family: 'proxima nova', sans-serif;
}

@mixin panton {
  font-family: 'panton', sans-serif;
}

@function rem($pixels, $context: $browser-context) {
  @return #{$pixels/$context}rem;
}

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

@function lh($lh, $fs) {
  @return #{$lh/$fs};
}

@mixin nav-link-hover($color) {
  display: block;
  position: relative;
  &::before {
    content: '';
    width: 0;
    height: rem(1.5);
    position: absolute;
    left: 0;
    bottom: rem(-5);
    background-color: $color;
    transition: all 0.3s;
  }
  &:hover {
    &::before {
      width: 100%;
    }
  }
}

// custom outline
@mixin custom-outline($color) {
  outline: none;

  &:focus,
  &:active {
    box-shadow: rem(0) rem(0) rem(0) rem(3.2) rgba($color, 0.6);
    @content;
  }
}

@mixin text_clamp($mxHeight, $rows) {
  max-height: rem($mxHeight);
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
  -webkit-line-clamp: $rows;
}

@mixin bg($url) {
  background-image: url($url);
  background-repeat: no-repeat;
  background-position: 50%  50%;
  background-size: contain;
}

@mixin fz($fz, $lh) {
  font-size: rem($fz);
  line-height: lh($lh, $fz);
}

@mixin object-fit($fit: fill, $position: null){
  -o-object-fit: $fit;
    object-fit: $fit;
  @if $position {
    -o-object-position: $position;
      object-position: $position;
    font-family: 'object-fit: #{$fit}; object-position: #{$position}';
  } @else {
    font-family: 'object-fit: #{$fit}';
  }
}

/*-------------- media --------------*/

// IE10+ CSS styles go here
@mixin target-ie11 {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }
}

@mixin target-edge {
  @supports (-ms-ime-align: auto) {
    @content;
  }
}

@mixin target-safari {
  @media not all and (min-resolution: .001dpcm) {
    @content;
  }
}

@mixin desktop-lg-down {
  @media screen and (max-width: $desktop-lg-down) {
    @content;
  }
}

@mixin desktop-lg-up {
  @media screen and (min-width: $desktop-lg-up) {
    @content;
  }
}

@mixin desktop-down {
  @media screen and (max-width: $desktop-down) {
    @content;
  }
}

@mixin desktop-up {
  @media screen and (min-width: $desktop-up) {
    @content;
  }
}

@mixin desktop-sm-down {
  @media screen and (max-width: $desktop-sm-down) {
    @content;
  }
}

@mixin desktop-sm-up {
  @media screen and (min-width: $desktop-sm-up) {
    @content;
  }
}

@mixin tablets-lg-down {
  @media screen and (max-width: $tablets-lg-down) {
    @content;
  }
}

@mixin tablets-lg-up {
  @media screen and (min-width: $tablets-lg-up) {
    @content;
  }
}

@mixin tablets-down {
  @media screen and (max-width: $tablets-down) {
    @content;
  }
}

@mixin tablets-up {
  @media screen and (min-width: $tablets-up) {
    @content;
  }
}

@mixin tablets-sm-down {
  @media screen and (max-width: $tablets-sm-down) {
    @content;
  }
}

@mixin tablets-sm-up {
  @media screen and (min-width: $tablets-sm-up) {
    @content;
  }
}

@mixin phones-lg-down {
  @media screen and (max-width: $phones-lg-down) {
    @content;
  }
}

@mixin phones-lg-up {
  @media screen and (min-width: $phones-lg-up) {
    @content;
  }
}

@mixin phones-down {
  @media screen and (max-width: $phones-down) {
    @content;
  }
}

@mixin phones-up {
  @media screen and (min-width: $phones-up) {
    @content;
  }
}

@mixin phones-sm-down {
  @media screen and (max-width: $phones-sm-down) {
    @content;
  }
}

@mixin phones-sm-up {
  @media screen and (min-width: $phones-sm-up) {
    @content;
  }
}

@mixin custom-down($prop) {
  @media screen and (max-width: $prop) {
    @content;
  }
}

@mixin custom-up($prop) {
  @media screen and (max-width: $prop) {
    @content;
  }
}
